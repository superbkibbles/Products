{"ast":null,"code":"var _jsxFileName = \"/home/mand/public/Products/src/products/products.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Row, Col, Nav } from \"react-bootstrap\";\nimport { Route, Switch, NavLink, Link } from \"react-router-dom\";\nimport \"./products.css\";\nimport Items from \"./product-item\";\n\nclass Products extends Component {\n  // iniziling before using\n  constructor(props) {\n    super(props);\n    this.state = {\n      Products: [],\n      filterProducts: [],\n      filterProductscpy: [],\n      search: \"\"\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://demo8421975.mockable.io/products\").then(res2 => {\n      this.setState({\n        Products: res2.data.products\n      });\n    });\n  } // filtering the items with the input\n\n\n  filterList(event) {\n    this.setState({\n      search: event.target.value\n    });\n    let updatedList = this.state.filterProductscpy;\n    updatedList = updatedList.filter(item => {\n      return item.brand.toLowerCase().search(event.target.value.toLowerCase()) !== -1;\n    });\n    this.setState({\n      filterProducts: updatedList\n    });\n    this.setState({\n      Qsearch: this.state.search\n    });\n  } // Getting Categories Names\n\n\n  GetCategoriesNames() {\n    let products = this.state.Products;\n    let resultCategoriesArray = [...new Set(products.map((data, i, arr) => data.bsr_category))];\n    return resultCategoriesArray;\n  } // checking for clicked category\n\n\n  clickedCategory(group) {\n    // this.setState({currentPage: group})\n    let item = this.state.Products.filter(res => res.bsr_category == group);\n    this.setState({\n      filterProducts: item\n    });\n    this.setState({\n      filterProductscpy: item\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Categories\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Products-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.GetCategoriesNames().map(res => {\n      return React.createElement(Link, {\n        exact: true,\n        onClick: () => this.clickedCategory(res),\n        to: {\n          pathname: res,\n          search: \"?search=\".concat(this.state.search)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \" \", res);\n    })))), React.createElement(Col, {\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Product-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Search Products\"), React.createElement(\"label\", {\n      htmlFor: \"product-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"product-search\",\n      placeholder: \"Search...\",\n      type: \"text\",\n      onChange: this.filterList.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), this.state.filterProducts.map(data => {\n      return React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: this.state.filterProductscpy.bsr_category,\n        render: () => React.createElement(Items, {\n          brand: data.brand,\n          img: data.img,\n          price: data.price,\n          rate: data.stars,\n          link: data.link,\n          search: this.state.search,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }));\n    }))));\n  }\n\n}\n\nexport default Products;","map":{"version":3,"sources":["/home/mand/public/Products/src/products/products.js"],"names":["React","Component","axios","Row","Col","Nav","Route","Switch","NavLink","Link","Items","Products","constructor","props","state","filterProducts","filterProductscpy","search","componentDidMount","get","then","res2","setState","data","products","filterList","event","target","value","updatedList","filter","item","brand","toLowerCase","Qsearch","GetCategoriesNames","resultCategoriesArray","Set","map","i","arr","bsr_category","clickedCategory","group","res","render","pathname","bind","img","price","stars","link"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport {Row, Col, Nav} from \"react-bootstrap\";\r\nimport {Route, Switch, NavLink, Link} from \"react-router-dom\";\r\n\r\nimport \"./products.css\"\r\nimport Items from \"./product-item\";\r\n\r\n\r\nclass Products extends Component\r\n{\r\n\t// iniziling before using\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tProducts: [],\r\n\t\t\tfilterProducts:[],\r\n\t\t\tfilterProductscpy:[],\r\n\t\t\tsearch: \"\",\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount()\r\n\t{\r\n\t\taxios.get(\"https://demo8421975.mockable.io/products\").then(res2=>{\r\n\t\t\tthis.setState({Products: res2.data.products});\r\n\t\t})\r\n\t}\r\n\r\n\t// filtering the items with the input\r\n\tfilterList (event)\r\n\t{\r\n\t\tthis.setState({search: event.target.value})\r\n\t\tlet updatedList = this.state.filterProductscpy;\r\n\t\tupdatedList = updatedList.filter((item)=>{\r\n\t\t\treturn item.brand.toLowerCase().search(event.target.value.toLowerCase()) !== -1;\r\n\t\t})\r\n\t\tthis.setState({filterProducts: updatedList});\r\n\t\tthis.setState({Qsearch: this.state.search})\r\n\t}\r\n\r\n\t// Getting Categories Names\r\n\tGetCategoriesNames()\r\n\t{\r\n\t\tlet products = this.state.Products;\r\n\t\tlet resultCategoriesArray = [...new Set(products.map((data, i, arr) => data.bsr_category))];\r\n\r\n\t\treturn resultCategoriesArray;\r\n\t}\r\n\r\n\t// checking for clicked category\r\n\tclickedCategory(group)\r\n\t{\r\n\t\t// this.setState({currentPage: group})\r\n\t\tlet item = this.state.Products.filter(res => res.bsr_category == group)\r\n\t\tthis.setState({filterProducts: item})\r\n\t\tthis.setState({filterProductscpy: item})\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col md={2}>\r\n\t\t\t\t\t\t<h1>Categories</h1>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t<Nav>\r\n\t\t\t\t\t\t\t<div className=\"Products-nav\">\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tthis.GetCategoriesNames().map(res => {\r\n\t\t\t\t\t\t\t\t\t\treturn <Link exact\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={()=> this.clickedCategory(res)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tto={{pathname: res, search: `?search=${this.state.search}`}} > {res}\r\n\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col md={8}>\r\n\t\t\t\t\t\t<div className=\"Product-search\">\r\n\t\t\t\t\t\t\t<h1>Search Products</h1>\r\n\t\t\t\t\t\t\t<label htmlFor=\"product-search\"/>\r\n\t\t\t\t\t\t\t<input id=\"product-search\" placeholder=\"Search...\" type=\"text\"\r\n\t\t\t\t\t\t\t\t\t onChange={this.filterList.bind(this)}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.state.filterProducts.map(data=>{\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t\t\t\t\t<Route exact path={this.state.filterProductscpy.bsr_category} render={()=>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Items brand={data.brand} img={data.img} price={data.price}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t rate={data.stars} link={data.link}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t search={this.state.search}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Products;"]},"metadata":{},"sourceType":"module"}