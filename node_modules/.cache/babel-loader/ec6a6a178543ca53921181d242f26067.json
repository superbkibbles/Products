{"ast":null,"code":"var _jsxFileName = \"/home/mand/public/Products/src/products/products.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Row, Col, Nav, Button } from \"react-bootstrap\";\nimport { Route, Switch, NavLink, Link } from \"react-router-dom\";\nimport \"./products.css\";\nimport Items from \"./product-item\";\nimport Home from \"./home\";\n\nclass Products extends Component {\n  // iniziling before using\n  constructor(props) {\n    super(props);\n    this.state = {\n      Products: [],\n      items: [],\n      filterProducts: [],\n      filterProductscpy: [],\n      categoryArr: [],\n      search: \"\",\n      currentpage: \"\",\n      urlQuery: \"\"\n    };\n  }\n\n  componentWillMount() {// console.log(\"will mount\");\n  }\n\n  componentDidMount() {\n    axios.get(\"https://demo8421975.mockable.io/products\").then(res => {\n      let resultCategoriesArray = [...new Set(res.data.products.map((data, i, arr) => data.bsr_category))];\n      this.setState({\n        categoryArr: [...resultCategoriesArray]\n      });\n      return res.data.products;\n    }).then(res2 => {\n      this.setState({\n        Products: res2\n      });\n      return res2;\n    }).then(res3 => {\n      this.setState({\n        items: res3\n      });\n    });\n  } // filtering the items on user input\n\n\n  filterList(event) {\n    this.setState({\n      search: event.target.value\n    }); // let updatedList = this.state.Products;\n    // updatedList = updatedList.filter((item)=>{\n    // \treturn item.brand.toLowerCase().search(event.target.value.toLowerCase()) !== -1;\n    // })\n    // this.setState({items: updatedList});\n\n    let query = \"/search=\".concat(event.target.value);\n    this.setState({\n      urlQuery: query\n    });\n  }\n\n  clickedCategory(group) {\n    // this.setState({currentPage: group})\n    let item = this.state.Products.filter(res => res.bsr_category === group);\n    this.setState({\n      filterProducts: item\n    });\n    this.setState({\n      filterProductscpy: item\n    });\n    this.setState({\n      currentpage: group.split(' ').join('')\n    });\n  }\n\n  changeQuery(va) {\n    let updatedList = this.state.Products;\n    updatedList = updatedList.filter(item => {\n      return item.brand.toLowerCase().search(this.state.search.toLowerCase()) !== -1;\n    });\n    this.setState({\n      items: updatedList\n    });\n  }\n\n  render() {\n    console.log(this.props.location);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Categories\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Products-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.categoryArr.map((res, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Link, {\n        onClick: () => this.clickedCategory(res),\n        to: {\n          pathname: \"/\".concat(res.split(' ').join('')),\n          search: \"\".concat(this.state.urlQuery)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, res));\n    })))), React.createElement(Col, {\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Product-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Search Products\"), React.createElement(\"label\", {\n      htmlFor: \"product-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"product-search\",\n      placeholder: \"Search...\",\n      type: \"text\",\n      onChange: this.filterList.bind(this),\n      onSubmit: this.test,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: va => this.changeQuery(va),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"search\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), this.state.categoryArr.map((res, i) => {\n      return (//send the items\n        React.createElement(Route, {\n          key: i,\n          exact: true,\n          path: \"/\".concat(res.split(' ').join('')),\n          render: routeProps => React.createElement(Items, {\n            item: this.state.items,\n            search: this.state.urlQuery,\n            stuff: routeProps,\n            category: res,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        })\n      );\n    }))));\n  }\n\n}\n\nexport default Products;","map":{"version":3,"sources":["/home/mand/public/Products/src/products/products.js"],"names":["React","Component","axios","Row","Col","Nav","Button","Route","Switch","NavLink","Link","Items","Home","Products","constructor","props","state","items","filterProducts","filterProductscpy","categoryArr","search","currentpage","urlQuery","componentWillMount","componentDidMount","get","then","res","resultCategoriesArray","Set","data","products","map","i","arr","bsr_category","setState","res2","res3","filterList","event","target","value","query","clickedCategory","group","item","filter","split","join","changeQuery","va","updatedList","brand","toLowerCase","render","console","log","location","pathname","bind","test","routeProps"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport {Row, Col, Nav, Button} from \"react-bootstrap\";\r\nimport {Route, Switch, NavLink, Link} from \"react-router-dom\";\r\n\r\nimport \"./products.css\"\r\nimport Items from \"./product-item\";\r\nimport Home from \"./home\"\r\n\r\n\r\nclass Products extends Component\r\n{\r\n\t// iniziling before using\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tProducts: [],\r\n\t\t\titems: [],\r\n\t\t\tfilterProducts:[],\r\n\t\t\tfilterProductscpy:[],\r\n\t\t\tcategoryArr: [],\r\n\t\t\tsearch: \"\",\r\n\t\t\tcurrentpage: \"\",\r\n\t\t\turlQuery: \"\"\r\n\t\t}\r\n\t}\r\n\tcomponentWillMount() {\r\n\t\t// console.log(\"will mount\");\r\n\t}\r\n\r\n\tcomponentDidMount()\r\n\t{\r\n\t\taxios.get(\"https://demo8421975.mockable.io/products\").then(res=>{\r\n\t\t\tlet resultCategoriesArray = [...new Set(res.data.products.map((data, i, arr) => data.bsr_category))];\r\n\t\t\tthis.setState({categoryArr: [...resultCategoriesArray]})\r\n\t\t\treturn res.data.products;\r\n\t\t}).then(res2=>{\r\n\t\t\tthis.setState({Products: res2});\r\n\t\t\treturn res2;\r\n\t\t}).then(res3=>{\r\n\t\t\tthis.setState({items: res3})\r\n\t\t})\r\n\t}\r\n\r\n\t// filtering the items on user input\r\n\tfilterList (event)\r\n\t{\r\n\t\tthis.setState({search: event.target.value})\r\n\t\t// let updatedList = this.state.Products;\r\n\r\n\t\t// updatedList = updatedList.filter((item)=>{\r\n\t\t// \treturn item.brand.toLowerCase().search(event.target.value.toLowerCase()) !== -1;\r\n\t\t// })\r\n\t\t// this.setState({items: updatedList});\r\n\r\n\t\tlet query = `/search=${event.target.value}`\r\n\t\tthis.setState({urlQuery: query})\r\n\t}\r\n\r\n\tclickedCategory(group)\r\n\t{\r\n\t\t// this.setState({currentPage: group})\r\n\t\tlet item = this.state.Products.filter(res => res.bsr_category === group);\r\n\t\tthis.setState({filterProducts: item});\r\n\t\tthis.setState({filterProductscpy: item});\r\n\t\tthis.setState({currentpage: group.split(' ').join('')})\r\n\t}\r\n\r\n\tchangeQuery(va)\r\n\t{\r\n\t\tlet updatedList = this.state.Products;\r\n\r\n\t\tupdatedList = updatedList.filter((item)=>{\r\n\t\t\treturn item.brand.toLowerCase().search(this.state.search.toLowerCase()) !== -1;\r\n\t\t})\r\n\t\tthis.setState({items: updatedList});\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tconsole.log(this.props.location)\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col md={2}>\r\n\t\t\t\t\t\t<h1>Categories</h1>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t<Nav>\r\n\t\t\t\t\t\t\t<div className=\"Products-nav\">\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tthis.state.categoryArr.map((res, i) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div key={i}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={()=> this.clickedCategory(res)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tto={{pathname: `/${res.split(' ').join('')}`, search:`${this.state.urlQuery}`}} >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{res}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col md={8}>\r\n\t\t\t\t\t\t<div className=\"Product-search\">\r\n\t\t\t\t\t\t\t<h1>Search Products</h1>\r\n\t\t\t\t\t\t\t<label htmlFor=\"product-search\"/>\r\n\t\t\t\t\t\t\t<input id=\"product-search\" placeholder=\"Search...\" type=\"text\"\r\n\t\t\t\t\t\t\t\t\t onChange={this.filterList.bind(this)} onSubmit={this.test}/>\r\n\t\t\t\t\t\t\t <Button onClick={(va)=> this.changeQuery(va)}>search</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t<Route exact path=\"/\" component={Home}/>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.state.categoryArr.map((res, i)=>{\r\n\t\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t\t//send the items\r\n\t\t\t\t\t\t\t\t\t<Route key={i} exact path={`/${res.split(' ').join('')}`} render={(routeProps) =>\r\n\t\t\t\t\t\t\t\t\t\t<Items item={this.state.items}\r\n\t\t\t\t\t\t\t\t\t\t\t\t search={this.state.urlQuery}\r\n\t\t\t\t\t\t\t\t\t\t\t\t stuff={routeProps} category={res}\r\n\t\t\t\t\t\t\t\t\t\t/>}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Products;\r\n\r\n"]},"metadata":{},"sourceType":"module"}