{"ast":null,"code":"var _jsxFileName = \"/home/mand/public/Products/src/products/products.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Row, Col, Nav } from \"react-bootstrap\";\nimport { Route, Switch, NavLink, Link } from \"react-router-dom\";\nimport \"./products.css\";\nimport Items from \"./product-item\";\nimport Home from \"./home\";\n\nclass Products extends Component {\n  // iniziling before using\n  constructor(props) {\n    super(props);\n    this.state = {\n      Products: [],\n      filterProducts: [],\n      filterProductscpy: [],\n      categoryArr: [],\n      search: \"\",\n      currentpage: \"\"\n    };\n  }\n\n  componentWillMount() {// console.log(\"will mount\");\n  }\n\n  componentDidMount() {\n    axios.get(\"https://demo8421975.mockable.io/products\").then(res2 => {\n      this.setState({\n        Products: res2.data.products\n      });\n      return res2.data.products;\n    }).then(res => {\n      let resultCategoriesArray = [...new Set(res.map((data, i, arr) => data.bsr_category))]; // console.log(resultCategoriesArray)\n\n      this.setState({\n        categoryArr: [...resultCategoriesArray]\n      });\n    }); // console.log(\"did mount\")\n  } // filtering the items with the input\n\n\n  filterList(event) {\n    this.setState({\n      search: event.target.value\n    });\n    let updatedList = this.state.filterProductscpy;\n    updatedList = updatedList.filter(item => {\n      return item.brand.toLowerCase().search(event.target.value.toLowerCase()) !== -1;\n    });\n    this.setState({\n      filterProducts: updatedList\n    });\n  } // Getting Categories Names\n  // GetCategoriesNames()\n  // {\n  // \tlet products = this.state.Products;\n  // \tlet resultCategoriesArray = [...new Set(products.map((data, i, arr) => data.bsr_category))];\n  //\n  // \treturn resultCategoriesArray;\n  // }\n  // checking for clicked category\n\n\n  clickedCategory(group) {\n    // this.setState({currentPage: group})\n    let item = this.state.Products.filter(res => res.bsr_category === group);\n    this.setState({\n      filterProducts: item\n    });\n    this.setState({\n      filterProductscpy: item\n    });\n    this.setState({\n      currentpage: group.split(' ').join('')\n    });\n  }\n\n  render() {\n    console.log(this.state.currentpage);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Categories\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Products-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.state.categoryArr.map((res, i) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Link, {\n        exact: true,\n        key: i,\n        onClick: () => this.clickedCategory(res),\n        to: \"/\".concat(res.split(' ').join('')),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, res));\n    })))), React.createElement(Col, {\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Product-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Search Products\"), React.createElement(\"label\", {\n      htmlFor: \"product-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"product-search\",\n      placeholder: \"Search...\",\n      type: \"text\",\n      onChange: this.filterList.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\".concat(this.state.currentpage),\n      render: () => React.createElement(Items, {\n        item: [...this.state.filterProductscpy],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Products; // to={{pathname: res.replace(/\\s/g, ''), search:`?search=${this.state.search}`}} >","map":{"version":3,"sources":["/home/mand/public/Products/src/products/products.js"],"names":["React","Component","axios","Row","Col","Nav","Route","Switch","NavLink","Link","Items","Home","Products","constructor","props","state","filterProducts","filterProductscpy","categoryArr","search","currentpage","componentWillMount","componentDidMount","get","then","res2","setState","data","products","res","resultCategoriesArray","Set","map","i","arr","bsr_category","filterList","event","target","value","updatedList","filter","item","brand","toLowerCase","clickedCategory","group","split","join","render","console","log","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,GAAb,EAAkBC,GAAlB,QAA4B,iBAA5B;AACA,SAAQC,KAAR,EAAeC,MAAf,EAAuBC,OAAvB,EAAgCC,IAAhC,QAA2C,kBAA3C;AAEA,OAAO,gBAAP;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAGA,MAAMC,QAAN,SAAuBX,SAAvB,CACA;AACC;AACAY,EAAAA,WAAW,CAACC,KAAD,EACX;AACC,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACZH,MAAAA,QAAQ,EAAE,EADE;AAEZI,MAAAA,cAAc,EAAC,EAFH;AAGZC,MAAAA,iBAAiB,EAAC,EAHN;AAIZC,MAAAA,WAAW,EAAE,EAJD;AAKZC,MAAAA,MAAM,EAAE,EALI;AAMZC,MAAAA,WAAW,EAAE;AAND,KAAb;AAQA;;AACDC,EAAAA,kBAAkB,GAAG,CACpB;AACA;;AAEDC,EAAAA,iBAAiB,GACjB;AACCpB,IAAAA,KAAK,CAACqB,GAAN,CAAU,0CAAV,EAAsDC,IAAtD,CAA2DC,IAAI,IAAE;AAChE,WAAKC,QAAL,CAAc;AAACd,QAAAA,QAAQ,EAAEa,IAAI,CAACE,IAAL,CAAUC;AAArB,OAAd;AACA,aAAOH,IAAI,CAACE,IAAL,CAAUC,QAAjB;AACA,KAHD,EAGGJ,IAHH,CAGQK,GAAG,IAAE;AACZ,UAAIC,qBAAqB,GAAG,CAAC,GAAG,IAAIC,GAAJ,CAAQF,GAAG,CAACG,GAAJ,CAAQ,CAACL,IAAD,EAAOM,CAAP,EAAUC,GAAV,KAAkBP,IAAI,CAACQ,YAA/B,CAAR,CAAJ,CAA5B,CADY,CAEZ;;AACA,WAAKT,QAAL,CAAc;AAACR,QAAAA,WAAW,EAAE,CAAC,GAAGY,qBAAJ;AAAd,OAAd;AACA,KAPD,EADD,CASC;AACA,GA9BF,CAgCC;;;AACAM,EAAAA,UAAU,CAAEC,KAAF,EACV;AACC,SAAKX,QAAL,CAAc;AAACP,MAAAA,MAAM,EAAEkB,KAAK,CAACC,MAAN,CAAaC;AAAtB,KAAd;AACA,QAAIC,WAAW,GAAG,KAAKzB,KAAL,CAAWE,iBAA7B;AAEAuB,IAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAoBC,IAAD,IAAQ;AACxC,aAAOA,IAAI,CAACC,KAAL,CAAWC,WAAX,GAAyBzB,MAAzB,CAAgCkB,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBK,WAAnB,EAAhC,MAAsE,CAAC,CAA9E;AACA,KAFa,CAAd;AAGA,SAAKlB,QAAL,CAAc;AAACV,MAAAA,cAAc,EAAEwB;AAAjB,KAAd;AACA,GA1CF,CA4CC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACAK,EAAAA,eAAe,CAACC,KAAD,EACf;AACC;AACA,QAAIJ,IAAI,GAAG,KAAK3B,KAAL,CAAWH,QAAX,CAAoB6B,MAApB,CAA2BZ,GAAG,IAAIA,GAAG,CAACM,YAAJ,KAAqBW,KAAvD,CAAX;AACA,SAAKpB,QAAL,CAAc;AAACV,MAAAA,cAAc,EAAE0B;AAAjB,KAAd;AACA,SAAKhB,QAAL,CAAc;AAACT,MAAAA,iBAAiB,EAAEyB;AAApB,KAAd;AACA,SAAKhB,QAAL,CAAc;AAACN,MAAAA,WAAW,EAAE0B,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB,EAAtB;AAAd,KAAd;AACA;;AAEDC,EAAAA,MAAM,GACN;AACCC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpC,KAAL,CAAWK,WAAvB;AACA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJD,EAKC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,KAAKL,KAAL,CAAWG,WAAX,CAAuBc,GAAvB,CAA2B,CAACH,GAAD,EAAMI,CAAN,KAAY;AACtC,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,IAAD;AACC,QAAA,KAAK,MADN;AAEC,QAAA,GAAG,EAAEA,CAFN;AAGC,QAAA,OAAO,EAAE,MAAK,KAAKY,eAAL,CAAqBhB,GAArB,CAHf;AAIC,QAAA,EAAE,aAAMA,GAAG,CAACkB,KAAJ,CAAU,GAAV,EAAeC,IAAf,CAAoB,EAApB,CAAN,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKEnB,GALF,CADD,CADD;AAWA,KAZD,CAFF,CADD,CALD,CADD,EA0BC,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADD,EAEC;AAAO,MAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAGC;AAAO,MAAA,EAAE,EAAC,gBAAV;AAA2B,MAAA,WAAW,EAAC,WAAvC;AAAmD,MAAA,IAAI,EAAC,MAAxD;AACG,MAAA,QAAQ,EAAE,KAAKO,UAAL,CAAgBgB,IAAhB,CAAqB,IAArB,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,CADD,EAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPD,EA0BC,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,aAAM,KAAKrC,KAAL,CAAWK,WAAjB,CAAjB;AAAiD,MAAA,MAAM,EAAE,MACvD,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAE,CAAC,GAAG,KAAKL,KAAL,CAAWE,iBAAf,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BD,CA1BD,CADD,CADD;AA6DA;;AA/HF;;AAkIA,eAAeL,QAAf,C,CAEA","sourcesContent":["import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport {Row, Col, Nav} from \"react-bootstrap\";\r\nimport {Route, Switch, NavLink, Link} from \"react-router-dom\";\r\n\r\nimport \"./products.css\"\r\nimport Items from \"./product-item\";\r\nimport Home from \"./home\"\r\n\r\n\r\nclass Products extends Component\r\n{\r\n\t// iniziling before using\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tProducts: [],\r\n\t\t\tfilterProducts:[],\r\n\t\t\tfilterProductscpy:[],\r\n\t\t\tcategoryArr: [],\r\n\t\t\tsearch: \"\",\r\n\t\t\tcurrentpage: \"\"\r\n\t\t}\r\n\t}\r\n\tcomponentWillMount() {\r\n\t\t// console.log(\"will mount\");\r\n\t}\r\n\r\n\tcomponentDidMount()\r\n\t{\r\n\t\taxios.get(\"https://demo8421975.mockable.io/products\").then(res2=>{\r\n\t\t\tthis.setState({Products: res2.data.products});\r\n\t\t\treturn res2.data.products\r\n\t\t}).then(res=>{\r\n\t\t\tlet resultCategoriesArray = [...new Set(res.map((data, i, arr) => data.bsr_category))];\r\n\t\t\t// console.log(resultCategoriesArray)\r\n\t\t\tthis.setState({categoryArr: [...resultCategoriesArray]})\r\n\t\t})\r\n\t\t// console.log(\"did mount\")\r\n\t}\r\n\r\n\t// filtering the items with the input\r\n\tfilterList (event)\r\n\t{\r\n\t\tthis.setState({search: event.target.value})\r\n\t\tlet updatedList = this.state.filterProductscpy;\r\n\r\n\t\tupdatedList = updatedList.filter((item)=>{\r\n\t\t\treturn item.brand.toLowerCase().search(event.target.value.toLowerCase()) !== -1;\r\n\t\t})\r\n\t\tthis.setState({filterProducts: updatedList});\r\n\t}\r\n\r\n\t// Getting Categories Names\r\n\t// GetCategoriesNames()\r\n\t// {\r\n\t// \tlet products = this.state.Products;\r\n\t// \tlet resultCategoriesArray = [...new Set(products.map((data, i, arr) => data.bsr_category))];\r\n\t//\r\n\t// \treturn resultCategoriesArray;\r\n\t// }\r\n\r\n\t// checking for clicked category\r\n\tclickedCategory(group)\r\n\t{\r\n\t\t// this.setState({currentPage: group})\r\n\t\tlet item = this.state.Products.filter(res => res.bsr_category === group);\r\n\t\tthis.setState({filterProducts: item});\r\n\t\tthis.setState({filterProductscpy: item});\r\n\t\tthis.setState({currentpage: group.split(' ').join('')})\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tconsole.log(this.state.currentpage)\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col md={2}>\r\n\t\t\t\t\t\t<h1>Categories</h1>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t<Nav>\r\n\t\t\t\t\t\t\t<div className=\"Products-nav\">\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tthis.state.categoryArr.map((res, i) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\t\t\t\texact\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={()=> this.clickedCategory(res)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tto={`/${res.split(' ').join('')}`} >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{res}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col md={8}>\r\n\t\t\t\t\t\t<div className=\"Product-search\">\r\n\t\t\t\t\t\t\t<h1>Search Products</h1>\r\n\t\t\t\t\t\t\t<label htmlFor=\"product-search\"/>\r\n\t\t\t\t\t\t\t<input id=\"product-search\" placeholder=\"Search...\" type=\"text\"\r\n\t\t\t\t\t\t\t\t\t onChange={this.filterList.bind(this)}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t{/*{*/}\r\n\t\t\t\t\t\t\t{/*\tthis.state.filterProducts.map((data, i)=>{*/}\r\n\t\t\t\t\t\t\t{/*\t\treturn (*/}\r\n\t\t\t\t\t\t\t{/*\t\t\t<Switch key={i}>*/}\r\n\t\t\t\t\t\t\t{/*\t\t\t\t{\tconsole.log(this.state.currentpage ==data.bsr_category.split(' ').join(''))}*/}\r\n\t\t\t\t\t\t\t{/*\t\t\t\t{console.log(data.bsr_category.split(' ').join(''))}*/}\r\n\t\t\t\t\t\t\t{/*\t\t\t\t<Route exact path={`/cates/${this.state.currentpage}`} render={(routeProps)=>*/}\r\n\t\t\t\t\t\t\t{/*\t\t\t\t\t<Items brand={data.brand} img={data.img} price={data.price}*/}\r\n\t\t\t\t\t\t\t{/*\t\t\t\t\t\t\t rate={data.stars} link={data.link}*/}\r\n\t\t\t\t\t\t\t{/*\t\t\t\t\t\t\t search={this.state.search}*/}\r\n\t\t\t\t\t\t\t{/*\t\t\t\t\t\t\t staff={routeProps}*/}\r\n\t\t\t\t\t\t\t{/*\t\t\t\t\t/>}*/}\r\n\t\t\t\t\t\t\t{/*\t\t\t\t/>*/}\r\n\t\t\t\t\t\t\t{/*\t\t\t </Switch>*/}\r\n\t\t\t\t\t\t\t{/*\t\t)}*/}\r\n\t\t\t\t\t\t\t{/*\t)*/}\r\n\t\t\t\t\t\t\t{/*}*/}\r\n\t\t\t\t\t\t{/*<Route exact path=\"/\" component={Home} />*/}\r\n\t\t\t\t\t\t<Route exact path={`/${this.state.currentpage}`} render={() =>\r\n\t\t\t\t\t\t\t\t<Items item={[...this.state.filterProductscpy]}/>}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Products;\r\n\r\n// to={{pathname: res.replace(/\\s/g, ''), search:`?search=${this.state.search}`}} >\r\n"]},"metadata":{},"sourceType":"module"}